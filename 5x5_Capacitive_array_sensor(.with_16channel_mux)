const int OUT_PIN = A2; //IDC
const int IN_PIN = A0; //PC

const float IN_STRAY_CAP_TO_GND = 24.48; //initially this was 30.00
const float IN_EXTRA_CAP_TO_GND = 0.0;
const float IN_CAP_TO_GND  = IN_STRAY_CAP_TO_GND + IN_EXTRA_CAP_TO_GND;
const int MAX_ADC_VALUE = 1023;

//PC
const int en_1 = 12;
const int s0_1 = 11;
const int s1_1 = 10;
const int s2_1 = 9;
const int s3_1 = 8;

//IDC
const int en_2 = 7;
const int s0_2 = 6;
const int s1_2 = 5;
const int s2_2 = 4;
const int s3_2 = 3;

float measure_cap () 
{
  pinMode(IN_PIN, INPUT);
  digitalWrite(OUT_PIN, HIGH);
  
  int val = analogRead(IN_PIN);
  float capacitance = (float)val * IN_CAP_TO_GND / (float)(MAX_ADC_VALUE - val);
  
  digitalWrite(OUT_PIN, LOW);
  pinMode(IN_PIN, OUTPUT);
  
  return capacitance;
}

int SetMuxChannel_1(byte chnl) //PC
{
   digitalWrite(s0_1, bitRead(chnl, 0));
   digitalWrite(s1_1, bitRead(chnl, 1));
   digitalWrite(s2_1, bitRead(chnl, 2));
   digitalWrite(s3_1, bitRead(chnl, 3));
}

int SetMuxChannel_2(byte chnl) //IDC
{
   digitalWrite(s0_2, bitRead(chnl, 0));
   digitalWrite(s1_2, bitRead(chnl, 1));
   digitalWrite(s2_2, bitRead(chnl, 2));
   digitalWrite(s3_2, bitRead(chnl, 3));
}

void setup()
{
  pinMode(OUT_PIN, OUTPUT);
  pinMode(IN_PIN, OUTPUT);

  pinMode(s0_1, OUTPUT);
  pinMode(s1_1, OUTPUT);
  pinMode(s2_1, OUTPUT);
  pinMode(s3_1, OUTPUT);
  pinMode(en_1, OUTPUT);

  digitalWrite(s0_1, LOW);
  digitalWrite(s1_1, LOW);
  digitalWrite(s2_1, LOW);
  digitalWrite(s3_1, LOW);
  digitalWrite(en_1, LOW);

  pinMode(s0_2, OUTPUT);
  pinMode(s1_2, OUTPUT);
  pinMode(s2_2, OUTPUT);
  pinMode(s3_2, OUTPUT);
  pinMode(en_2, OUTPUT);

  digitalWrite(s0_2, LOW);
  digitalWrite(s1_2, LOW);
  digitalWrite(s2_2, LOW);
  digitalWrite(s3_2, LOW);
  digitalWrite(en_2, LOW); 
   
  Serial.begin(9600);
}

void loop()
{
  for(byte i = 0; i < 5; i++)
  {
    SetMuxChannel_1(i);
    for(byte j = 0; j < 5; j++)
    {
      SetMuxChannel_2(j);
      Serial.print(measure_cap());
      Serial.print("\t");
    }
    Serial.println();
  }
  Serial.println();
  delay(20);
}